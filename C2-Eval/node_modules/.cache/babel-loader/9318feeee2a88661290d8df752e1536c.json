{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Evaluation\\\\my-app\\\\src\\\\components\\\\Recipe.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport RecipeInput from \"./RecipeInput\";\nimport RecipeList from \"./RecipeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  const [food, setTitle] = useState([]);\n\n  const foodChange = data => {\n    console.log(\"Received on Parent:\", data);\n    const payload = {\n      data,\n      id: nanoid(8)\n    };\n    setTitle(...title, payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(RecipeInput, {\n      getData: foodChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), title.map(e => /*#__PURE__*/_jsxDEV(RecipeList, {\n      food: e.data\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recipe, \"CGdF/Zt+qXaNWgCqO1KXWn+kyHo=\");\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["D:/Learning/Evaluation/my-app/src/components/Recipe.jsx"],"names":["useState","nanoid","RecipeInput","RecipeList","Recipe","food","setTitle","foodChange","data","console","log","payload","id","title","map","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMO,UAAU,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAnC;AACA,UAAMG,OAAO,GAAG;AACdH,MAAAA,IADc;AAEdI,MAAAA,EAAE,EAAEX,MAAM,CAAC,CAAD;AAFI,KAAhB;AAIAK,IAAAA,QAAQ,CAAC,GAAGO,KAAJ,EAAWF,OAAX,CAAR;AACD,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,KAAK,CAACC,GAAN,CAAWC,CAAD,iBACT,QAAC,UAAD;AAAuB,MAAA,IAAI,EAAEA,CAAC,CAACP;AAA/B,OAAiBO,CAAC,CAACH,EAAnB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAMR,M;;KAAAA,M;AAqBN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport RecipeInput from \"./RecipeInput\";\r\nimport RecipeList from \"./RecipeList\";\r\nconst Recipe = () => {\r\n  const [food, setTitle] = useState([]);\r\n\r\n  const foodChange = (data) => {\r\n    console.log(\"Received on Parent:\", data);\r\n    const payload = {\r\n      data,\r\n      id: nanoid(8),\r\n    };\r\n    setTitle(...title, payload);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <RecipeInput getData={foodChange} />\r\n      {title.map((e) => (\r\n        <RecipeList key={e.id} food={e.data} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n"]},"metadata":{},"sourceType":"module"}